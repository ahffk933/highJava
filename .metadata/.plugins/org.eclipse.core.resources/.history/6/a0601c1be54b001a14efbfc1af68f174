package controller;

import java.io.IOException;
import java.util.List;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Side;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.chart.BarChart;
import javafx.scene.chart.PieChart;
import javafx.scene.chart.XYChart;
import javafx.scene.chart.XYChart.Data;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import service.Service;
import service.ServiceImpl;
import vo.VO;

public class Controller {

	Service service = ServiceImpl.getInstance();
	
	List<VO> list = service.getData();
	
	@FXML BorderPane table;
	@FXML TableView<VO> tb;
	@FXML TableColumn<VO, String> name;
	@FXML TableColumn<VO, String> kor;
	@FXML TableColumn<VO, String> math;
	@FXML TableColumn<VO, String> eng;
	@FXML Button insertButton;
	@FXML Button getBarChart;
	
	
	@FXML public void clickInsert(ActionEvent event) {
		Stage dialog = new Stage(StageStyle.UTILITY);
		dialog.initModality(Modality.APPLICATION_MODAL);
		
		Parent parent = null;
		try {
			parent = FXMLLoader.load(getClass().getResource("/fxml/insertScoreDialog.fxml"));
		}
		catch (IOException ex) {
			ex.printStackTrace();
		}
		
		
		Pane pane = (Pane) parent.lookup("#pane");
		TextField tname = (TextField) parent.lookup("#tName");
		TextField tkor = (TextField) parent.lookup("#tKor");
		TextField tmath = (TextField) parent.lookup("#tMath");
		TextField teng = (TextField) parent.lookup("#tEng");
		Button save = (Button) parent.lookup("#save");
		Button cancel = (Button) parent.lookup("#cancel");

		// 5. Scene객체 생성해서 컨테이너 객체 추가
		Scene scene = new Scene(parent);

		// 6. Stage객체에 Scene객체 추가
		dialog.setScene(scene);
		dialog.setResizable(false); // 크기 고정
		dialog.show();

		
		save.setOnAction(e -> {
			// 얻은 데이터를 DB로 전송
			VO vo = new VO();
			vo.setName(tname.getText());
			vo.setKor(Integer.parseInt(tkor.getText()));
			vo.setMath(Integer.parseInt(tmath.getText()));
			vo.setEng(Integer.parseInt(teng.getText()));
			service.insertData(vo);
			
			// 테이블에 데이터 추가
			tb.getItems().add(vo);

			dialog.close();
			
		});

		cancel.setOnAction(e -> {
			dialog.close();
		});
	}
	
	@FXML public void clickBarChart(ActionEvent event) {
		Stage dialog = new Stage(StageStyle.UTILITY);
		dialog.initModality(Modality.APPLICATION_MODAL);
		
		Parent parent = null;
		try {
			parent = FXMLLoader.load(getClass().getResource("/fxml/barChart.fxml"));
		}
		catch(IOException e) {
			e.printStackTrace();
		}
		
		BarChart<String, Number> barchar = (BarChart<String, Number>) parent.lookup("#bc");
		
		XYChart.Series<String, Number> ser1 = new XYChart.Series<>();
		ser1.setName("국어");
		for(int i = 0 ; i < list.size() ; i++)
		{
			ser1.getData().add(new Data<String, Number>(list.get(i).getName(), list.get(i).getKor()));
		}
		
		XYChart.Series<String, Number> ser2 = new XYChart.Series<>();
		ser2.setName("수학");
		for(int i = 0 ; i < list.size() ; i++)
		{
			ser1.getData().add(new Data<String, Number>(list.get(i).getName(), list.get(i).getMath()));
		}
		
		XYChart.Series<String, Number> ser3 = new XYChart.Series<>();
		ser2.setName("영어");
		for(int i = 0 ; i < list.size() ; i++)
		{
			ser1.getData().add(new Data<String, Number>(list.get(i).getName(), list.get(i).getEng()));
		}
		
		barchar.getData().addAll(ser1, ser2, ser3);
		
		Scene scene = new Scene(parent);
		
		dialog.setScene(scene);
		dialog.setResizable(false);
		dialog.show();
		
		Button btn = (Button) parent.lookup("#close");
		btn.setOnAction(e->{
			dialog.close();
		});
		
	}
	
	@FXML
	void initialize() {
		name.setCellValueFactory(new PropertyValueFactory<>("name"));
		kor.setCellValueFactory(new PropertyValueFactory<>("kor"));
		math.setCellValueFactory(new PropertyValueFactory<>("math"));
		eng.setCellValueFactory(new PropertyValueFactory<>("eng"));

		ObservableList<VO> oList = FXCollections.observableArrayList(list);
		tb.setItems(oList);

	}
	
	@FXML public void selectRow() {
		Stage dialog2 = new Stage(StageStyle.UTILITY);
		
		dialog2.initModality(Modality.APPLICATION_MODAL);
		
		Parent parent2 = null;
		try {
			parent2 = FXMLLoader.load(getClass().getResource("/fxml/pieChart.fxml"));
		} catch (IOException ex) {
			ex.printStackTrace();
		}
		
		PieChart pieChart = (PieChart) parent2.lookup("#pieChart");
		
		ObservableList<PieChart.Data> pieChartData = FXCollections.observableArrayList(
				new PieChart.Data("국어", list.get(tb.getSelectionModel().getSelectedIndex()).getKor()),
				new PieChart.Data("수학", list.get(tb.getSelectionModel().getSelectedIndex()).getMath()),
				new PieChart.Data("영어", list.get(tb.getSelectionModel().getSelectedIndex()).getEng()));

//		ObservableList<PieChart.Data> pieChartData = FXCollections.observableArrayList(
//				new PieChart.Data("국어", 10),
//				new PieChart.Data("수학", 20),
//				new PieChart.Data("영어", 30));

		pieChart.setTitle("파일 그래프");
		pieChart.setLabelLineLength(50);
		pieChart.setLegendSide(Side.RIGHT); // 범례가 나타날 위치
		pieChart.setData(pieChartData); // 데이터 설정

		// 5. Scene객체 생성해서 컨테이너 객체 추가
		Scene scene2 = new Scene(parent2);

		// 6. Stage객체에 Scene객체 추가
		dialog2.setScene(scene2);
		dialog2.setResizable(false); // 크기 고정
		dialog2.show();

		// 모달창 닫기
		Button btn2 = (Button) parent2.lookup("#closeButton");
		btn2.setOnAction(e -> {
			dialog2.close();
		});
		
	}
	

}
